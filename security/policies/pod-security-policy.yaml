# Pod Security Standards for Pathavana
# This file defines security policies that pods must comply with

apiVersion: v1
kind: Namespace
metadata:
  name: pathavana-production
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---
apiVersion: v1
kind: Namespace
metadata:
  name: pathavana-staging
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---
apiVersion: v1
kind: Namespace
metadata:
  name: pathavana
  labels:
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/audit: baseline
    pod-security.kubernetes.io/warn: baseline
---
# Security Context Constraints (for OpenShift) or Pod Security Policy (deprecated)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: pathavana-psp
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
    seccomp.security.beta.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    seccomp.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
  seLinux:
    rule: RunAsAny
---
# Network Security Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pathavana-network-policy
  namespace: pathavana-production
spec:
  podSelector:
    matchLabels:
      app: pathavana
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
  # Allow ingress within the same namespace
  - from:
    - podSelector:
        matchLabels:
          app: pathavana
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  # Allow monitoring access
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow egress to same namespace
  - to:
    - podSelector:
        matchLabels:
          app: pathavana
  # Allow egress to kube-system for DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow egress to external APIs (HTTPS)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow egress to external APIs (HTTP) - only for development
  - to: []
    ports:
    - protocol: TCP
      port: 80
---
# Resource Quotas
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pathavana-resource-quota
  namespace: pathavana-production
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "10"
    services: "10"
    secrets: "20"
    configmaps: "20"
    count/deployments.apps: "10"
    count/jobs.batch: "5"
---
# Limit Ranges
apiVersion: v1
kind: LimitRange
metadata:
  name: pathavana-limit-range
  namespace: pathavana-production
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "2"
      memory: "4Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
  - max:
      storage: "100Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim