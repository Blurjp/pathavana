apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pathavana-ingress
  labels:
    app: pathavana
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    nginx.ingress.kubernetes.io/server-snippet: |
      location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
      }
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://pathavana.com,https://www.pathavana.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
spec:
  tls:
  - hosts:
    - pathavana.com
    - www.pathavana.com
    secretName: tls-secret
  rules:
  - host: pathavana.com
    http:
      paths:
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: pathavana-backend
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: pathavana-backend
            port:
              number: 8000
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: pathavana-backend
            port:
              number: 8000
      - path: /redoc
        pathType: Prefix
        backend:
          service:
            name: pathavana-backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pathavana-frontend
            port:
              number: 3000
  - host: www.pathavana.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pathavana-frontend
            port:
              number: 3000
---
# Redirect www to non-www
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pathavana-redirect
  labels:
    app: pathavana
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/permanent-redirect: "https://pathavana.com$request_uri"
spec:
  tls:
  - hosts:
    - www.pathavana.com
    secretName: tls-secret
  rules:
  - host: www.pathavana.com
---
# Network Policy for ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pathavana-ingress-policy
  labels:
    app: pathavana
spec:
  podSelector:
    matchLabels:
      app: pathavana
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
  # Allow ingress within the namespace
  - from:
    - podSelector:
        matchLabels:
          app: pathavana
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  egress:
  # Allow egress to external APIs
  - {}
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53